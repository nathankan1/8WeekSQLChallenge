/* --------------------
   Case Study Questions
   --------------------*/

-- 1. What is the total amount each customer spent at the restaurant?

SELECT 
	sales.customer_id, 
	SUM(menu.price) AS total_spent 
FROM sales
INNER JOIN menu ON menu.product_id = sales.product_id
GROUP BY customer_id 
ORDER BY customer_id;

-- 2. How many days has each customer visited the restaurant?

SELECT 
	customer_id, 
	COUNT(DISTINCT(order_date)) 
FROM sales
GROUP BY customer_id;

-- 3. What was the first item from the menu purchased by each customer?

WITH CTE AS(
	SELECT 
	customer_id,
	order_date,
	product_name,
	RANK() OVER (PARTITION BY customer_id ORDER BY order_date ASC) as rank
	FROM sales
	INNER JOIN menu ON menu.product_id = sales.product_id
	)
SELECT 
	customer_id,
	product_name
FROM CTE
WHERE rank = 1;

-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?

SELECT 
	product_name,
	COUNT(*) AS freq
FROM sales
INNER JOIN menu ON menu.product_id = sales.product_id
GROUP BY product_name
ORDER BY freq DESC
LIMIT 1;

-- 5. Which item was the most popular for each customer?

WITH CTE AS (
	SELECT
		customer_id,
		product_name,
		COUNT(product_name) AS freq,
		RANK() OVER (PARTITION BY customer_id ORDER BY COUNT(*) DESC) AS rank
	FROM sales
	INNER JOIN menu ON menu.product_id = sales.product_id
	GROUP BY customer_id, product_name
	ORDER BY customer_id, freq DESC
	)
SELECT
customer_id,
product_name
FROM CTE
WHERE rank = 1;

-- 6. Which item was purchased first by the customer after they became a member?

WITH CTE AS (
	SELECT 
	sales.customer_id,
	join_date,
	order_date,
	sales.product_id,
	product_name,
	RANK () OVER (PARTITION BY sales.customer_id ORDER BY order_date ASC) AS rank
	FROM sales
	INNER JOIN menu ON menu.product_id = sales.product_id
	INNER JOIN members ON members.customer_id = sales.customer_id
	WHERE join_date <= order_date
	ORDER BY customer_id
	)
SELECT
	customer_id,
	product_name
FROM CTE
WHERE rank = 1;

-- 7. Which item was purchased just before the customer became a member?

WITH CTE AS (
	SELECT 
	sales.customer_id,
	join_date,
	order_date,
	sales.product_id,
	product_name,
	RANK () OVER (PARTITION BY sales.customer_id ORDER BY order_date DESC) AS rank
	FROM sales
	INNER JOIN menu ON menu.product_id = sales.product_id
	INNER JOIN members ON members.customer_id = sales.customer_id
	WHERE join_date > order_date
	ORDER BY customer_id
	)
SELECT 
	customer_id,
	product_name
FROM CTE
WHERE rank = 1;

-- 8. What is the total items and amount spent for each member before they became a member?

SELECT 
	sales.customer_id,
	COUNT(*) AS total_items,
	SUM(price) AS amount_spent
FROM sales
INNER JOIN menu ON menu.product_id = sales.product_id
INNER JOIN members ON members.customer_id = sales.customer_id
WHERE join_date > order_date
GROUP BY sales.customer_id
ORDER BY sales.customer_id;

-- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?

SELECT
	customer_id,
	SUM(CASE
	WHEN product_name = 'sushi' THEN price * 10 * 2
	ELSE price * 10
	END) AS total_points
FROM sales AS s
INNER JOIN menu AS m ON m.product_id = s.product_id
GROUP BY customer_id
ORDER BY customer_id;

-- 10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?

SELECT 
	sales.customer_id,
	SUM(CASE
		WHEN order_date BETWEEN join_date AND join_date + INTERVAL '7 days' THEN price * 10 * 2
		WHEN product_name = 'sushi' THEN price * 10 * 2
		ELSE price * 10
		END) AS points
FROM sales
INNER JOIN menu ON menu.product_id = sales.product_id
INNER JOIN members ON members.customer_id = sales.customer_id
WHERE DATE_TRUNC('month',order_date) = '2021-01-01'
GROUP BY sales.customer_id
ORDER BY sales.customer_id;

